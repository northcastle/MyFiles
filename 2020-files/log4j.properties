
#1.设置日志的级别+日志输出位置
log4j.rootCategory=TRACE,stdout,F,E

#log4j.logger.com.mybatis.project.mapper=TRACE

#2.1 位置1 stdout ： 在控制台上直接打印输出
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=%d{yyyyMMdd HH:mm:SS} (%F:%L) [%5p] [%t] %m%n

#2.2 位置2 F： 输出日志到文件中 : 每天生成一个日志文件的形式
log4j.appender.F=org.apache.log4j.DailyRollingFileAppender
log4j.appender.F.File=logs/normal_logs/log-
#指定日志滚动的周期，下面的写法是每天滚动一次
log4j.appender.F.File.DatePattern='.'yyyy-MM-dd
# 是否在原日志的基础上进行追加操作，默认就是true/false
log4j.appender.F.Append=true 
# 这个应该是设置日志的级别
log4j.appender.F.Threshold=TRACE
log4j.appender.F.layout=org.apache.log4j.PatternLayout
log4j.appender.F.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:SS} (%F:%L) [%5p] [%t] %m%n


#2.3 位置3：E : error 的日志输出到文件中去
log4j.appender.E=org.apache.log4j.DailyRollingFileAppender
log4j.appender.E.File=logs/error_logs/error_log-
log4j.appender.E.File.DatePattern='.'yyyy-MM-dd
log4j.appender.E.Append=true
log4j.appender.E.Threshold=ERROR
log4j.appender.E.layout=org.apache.log4j.PatternLayout
log4j.appender.E.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:SS} (%F:%L) [%5p] [%t] %m%n

# 【注1】日志输出到其他的文件中，的DatePattern 的设置，只有第二天才会看到前一天的日志中追加了这个后缀名
    #'.'yyyy-MM：每月
    #'.'yyyy-ww：每周
    #'.'yyyy-MM-dd：每天
    #'.'yyyy-MM-dd-a：每天两次
    #'.'yyyy-MM-dd-HH：每小时
    #'.'yyyy-MM-dd-HH-mm：每分钟

#【注2】日志输出格式的自定义符号 ：
    # %p：输出日志信息的优先级，即DEBUG，INFO，WARN，ERROR，FATAL。
    # %d：输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，如：%d{yyyy/MM/dd HH:mm:ss,SSS}。
    # %r：输出自应用程序启动到输出该log信息耗费的毫秒数。
    # %t：输出产生该日志事件的线程名。
    # %l：输出日志事件的发生位置，相当于%c.%M(%F:%L)的组合，包括类全名、方法、文件名以及在代码中的行数。例如：test.TestLog4j.main(TestLog4j.java:10)。
    # %c：输出日志信息所属的类目，通常就是所在类的全名。
    # %M：输出产生日志信息的方法名。
    # %F：输出日志消息产生时所在的文件名称。
    # %L:：输出代码中的行号。
    # %m:：输出代码中指定的具体日志信息。
    # %n：输出一个回车换行符，Windows平台为"\r\n"，Unix平台为"\n"。
    # %x：输出和当前线程相关联的NDC(嵌套诊断环境)，尤其用到像java servlets这样的多客户多线程的应用中。
    # %%：输出一个"%"字符。

    #    另外，还可以在%与格式字符之间加上修饰符来控制其最小长度、最大长度、和文本的对齐方式。如：
    #
    #    c：指定输出category的名称，最小的长度是20，如果category的名称长度小于20的话，默认的情况下右对齐。
    #    2)%-20c："-"号表示左对齐。
    #    3)%.30c：指定输出category的名称，最大的长度是30，如果category的名称长度大于30的话，就会将左边多出的字符截掉，但小于30的话也不会补空格。



